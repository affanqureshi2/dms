{"ast":null,"code":"var _jsxFileName = \"D:\\\\TypescriptTest\\\\dashboard\\\\src\\\\components\\\\ScanResultForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanResultForm = () => {\n  _s();\n  const [repositoryName, setRepositoryName] = useState('');\n  const [status, setStatus] = useState('Queued');\n  const [findings, setFindings] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = {\n      repositoryName,\n      status,\n      findings: JSON.parse(findings),\n      queuedAt: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('http://localhost:3000/api/results', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(result)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit scan result');\n      }\n\n      // Reset form on successful submission\n      setRepositoryName('');\n      setStatus('Queued');\n      setFindings('');\n      alert('Scan result submitted successfully');\n    } catch (error) {\n      console.error(error);\n      alert('Error submitting scan result');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"repositoryName\",\n        children: \"Repository Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"repositoryName\",\n        value: repositoryName,\n        onChange: e => setRepositoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Queued\",\n          children: \"Queued\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Success\",\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Failure\",\n          children: \"Failure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"findings\",\n        children: \"Findings (JSON)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"findings\",\n        value: findings,\n        onChange: e => setFindings(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanResultForm, \"oZYZgRSWObk5NUtOUp+zdSbhN60=\");\n_c = ScanResultForm;\nexport default ScanResultForm;\nvar _c;\n$RefreshReg$(_c, \"ScanResultForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScanResultForm","_s","repositoryName","setRepositoryName","status","setStatus","findings","setFindings","handleSubmit","e","preventDefault","result","JSON","parse","queuedAt","Date","toISOString","response","fetch","method","headers","body","stringify","ok","Error","alert","error","console","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/TypescriptTest/dashboard/src/components/ScanResultForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/Form.css';\r\n\r\nconst ScanResultForm: React.FC = () => {\r\n  const [repositoryName, setRepositoryName] = useState('');\r\n  const [status, setStatus] = useState('Queued');\r\n  const [findings, setFindings] = useState('');\r\n  \r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const result = {\r\n      repositoryName,\r\n      status,\r\n      findings: JSON.parse(findings),\r\n      queuedAt: new Date().toISOString(),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/results', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(result),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to submit scan result');\r\n      }\r\n\r\n      // Reset form on successful submission\r\n      setRepositoryName('');\r\n      setStatus('Queued');\r\n      setFindings('');\r\n      alert('Scan result submitted successfully');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error submitting scan result');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"repositoryName\">Repository Name</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"repositoryName\" \r\n          value={repositoryName} \r\n          onChange={(e) => setRepositoryName(e.target.value)} \r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select \r\n          id=\"status\" \r\n          value={status} \r\n          onChange={(e) => setStatus(e.target.value)}\r\n        >\r\n          <option value=\"Queued\">Queued</option>\r\n          <option value=\"In Progress\">In Progress</option>\r\n          <option value=\"Success\">Success</option>\r\n          <option value=\"Failure\">Failure</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"findings\">Findings (JSON)</label>\r\n        <textarea \r\n          id=\"findings\" \r\n          value={findings} \r\n          onChange={(e) => setFindings(e.target.value)} \r\n        />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ScanResultForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}