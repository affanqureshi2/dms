{"ast":null,"code":"var _jsxFileName = \"D:\\\\TypescriptTest\\\\dashboard\\\\src\\\\components\\\\ScanResultList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanResultList = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/results');\n        if (!response.ok) {\n          throw new Error('Failed to fetch scan results');\n        }\n        const data = await response.json();\n        setResults(data);\n      } catch (error) {\n        console.error(error);\n        alert('Error fetching scan results');\n      }\n    };\n    fetchResults();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Repository Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Findings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: result.repositoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${result.status.toLowerCase().replace(' ', '-')}`,\n            children: result.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge\",\n            children: result.findings.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: result.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanResultList, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = ScanResultList;\nexport default ScanResultList;\nvar _c;\n$RefreshReg$(_c, \"ScanResultList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScanResultList","_s","results","setResults","fetchResults","response","fetch","ok","Error","data","json","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","repositoryName","status","toLowerCase","replace","findings","length","timestamp","id","_c","$RefreshReg$"],"sources":["D:/TypescriptTest/dashboard/src/components/ScanResultList.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './styles/List.css';\r\n\r\nexport interface ScanResult {\r\n  id: number;\r\n  repositoryName: string;\r\n  status: 'Queued' | 'In Progress' | 'Success' | 'Failure';\r\n  findings: any[];\r\n  timestamp: string;\r\n}\r\n\r\nconst ScanResultList: React.FC = () => {\r\n\r\n    const [results, setResults] = useState<ScanResult[]>([]);\r\n\r\n    useEffect(() => {\r\n      const fetchResults = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:3000/api/results');\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch scan results');\r\n          }\r\n          const data = await response.json();\r\n          setResults(data);\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert('Error fetching scan results');\r\n        }\r\n      };\r\n  \r\n      fetchResults();\r\n    }, []);\r\n  \r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Repository Name</th>\r\n          <th>Status</th>\r\n          <th>Findings</th>\r\n          <th>Timestamp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {results.map((result) => (\r\n          <tr key={result.id}>\r\n            <td>{result.repositoryName}</td>\r\n            <td><span className={`badge ${result.status.toLowerCase().replace(' ', '-')}`}>{result.status}</span></td>\r\n            <td><span className=\"badge\">{result.findings.length}</span></td>\r\n            <td>{result.timestamp}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ScanResultList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}