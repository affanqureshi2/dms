{"ast":null,"code":"var _jsxFileName = \"D:\\\\TypescriptTest\\\\dashboard\\\\src\\\\components\\\\FindingsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindingsList = ({\n  scanId\n}) => {\n  _s();\n  const [findings, setFindings] = useState([]);\n  useEffect(() => {\n    const fetchFindings = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/results/${scanId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch findings');\n        }\n        const data = await response.json();\n        if (typeof data[0].findings !== undefined) {\n          Object.entries(obj).map(([key, value]) => {\n            return `${key}: ${value}`;\n          });\n          setFindings(JSON.parse(data[0].findings));\n        }\n        console.log(typeof findings);\n      } catch (error) {\n        console.error(error);\n        alert('Error fetching findings');\n      }\n    };\n    fetchFindings();\n  }, [scanId]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rule ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Severity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Path : Line Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: findings.map((finding, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: finding.ruleId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: finding.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: finding.severity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: finding.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(FindingsList, \"x3OH+I4WCuubU4xflxehS75McIs=\");\n_c = FindingsList;\nexport default FindingsList;\nvar _c;\n$RefreshReg$(_c, \"FindingsList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FindingsList","scanId","_s","findings","setFindings","fetchFindings","response","fetch","ok","Error","data","json","undefined","Object","entries","obj","map","key","value","JSON","parse","console","log","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","finding","index","ruleId","description","severity","path","_c","$RefreshReg$"],"sources":["D:/TypescriptTest/dashboard/src/components/FindingsList.tsx"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport './styles/List.css';\r\n\r\nexport interface Finding {\r\n  ruleId: string;\r\n  description: string;\r\n  severity: 'Low' | 'Medium' | 'High' | \"Critical\";\r\n  path: string;\r\n}\r\n\r\nconst FindingsList: React.FC<{ scanId: number  }> = ({ scanId }) => {\r\n\r\n    const [findings, setFindings] = useState<Finding[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFindings = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/api/results/${scanId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch findings');\r\n        }\r\n        const data = await response.json();\r\n        if(typeof data[0].findings !== undefined)\r\n        {\r\n            Object.entries(obj).map(([key, value]) => {\r\n                return `${key}: ${value}`;\r\n              });\r\n            setFindings(JSON.parse(data[0].findings));\r\n        }\r\n        console.log(typeof findings);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Error fetching findings');\r\n      }\r\n    };\r\n\r\n    fetchFindings();\r\n  }, [scanId]);\r\n  \r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Rule ID</th>\r\n          <th>Description</th>\r\n          <th>Severity</th>\r\n          <th>Path : Line Number</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {findings.map((finding, index) => (\r\n          <tr >\r\n            <td>{finding.ruleId}</td>\r\n            <td>{finding.description}</td>\r\n            <td><span >{finding.severity}</span></td>\r\n            <td>{finding.path}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default FindingsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}